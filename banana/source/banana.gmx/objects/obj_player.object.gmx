<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.5;
xsp = 0;
ysp = 0;
jsp = 7; //jump speed
msp = 5; //move speed
fric = 0.25 //friction

jumps = 0; 
jumps_max = 2; 

walljumps = 0;
walljumps_max = 10;

attack = false; 

globalvar face;

face = 1;

image_speed = 0.25;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera
view_xview[0] += ((x-(view_wview[0]/2)) - view_xview[0]) * 0.1;
view_yview[0] += ((y-(view_hview[0]/2)) - view_yview[0]) * 0.1;

view_xview[0] = clamp(view_xview[0] + ((x-(view_wview[0]/2)) - view_xview[0]) * 0.1, 0, room_width - view_wview[0]);
view_yview[0] = clamp(view_yview[0] + ((y-(view_hview[0]/2)) - view_yview[0]) * 0.1, 0, room_height - view_hview[0]);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player input
var key_r = keyboard_check(vk_right); //1 or 0 
var key_l = keyboard_check(vk_left); //1 or 0, since left is negative x direction
var key_j = keyboard_check_pressed(vk_space); // 1 or 0
var key_a = keyboard_check_pressed(ord('x'));

//Movement
move_sign = (-key_l + key_r);
move = move_sign * msp;   
if (xsp != move) {
 if (xsp &lt; move ){
    xsp += fric;  
 }else if (xsp &gt; move) {
    xsp -= fric; 
 }
 }else if (move = 0)
{
    if(xsp !=0)
    {
        if(xsp &lt;0)
        {
            xsp += fric;
        }
            else
            {
                xsp -= fric;
            }
    }
}

//Gravity
if (ysp &lt; 10) {
    ysp += grav;
    if (ysp &gt; 1)
        ysp *= 1.05;
}; 

//Jump
if (place_meeting(x, y+1, obj_collide)) //player is meeting the floor
{
    jumps = jumps_max;
    walljumps = walljumps_max;
}

if (key_j) {
    if(jumps&gt;0) { 
    ysp = -jsp; //jump 
    jumps -=1;
    }
    if (walljumps &gt; 0) {
    if ((place_meeting(x+1, y, obj_collide))|| (place_meeting(x-1, y, obj_collide))) { //walljump
        walljumps -= 1;
        jumps = 1;
        ysp = -jsp;
        xsp += -move_sign * 5;
        }
    } 
    

}


//Horizontal Collision 
if (place_meeting(x+xsp, y, obj_collide )) //if range between wall and player is less than speed 
{
    while(!(place_meeting(x+sign(xsp), y, obj_collide))) { //while not 1 pixel away from wall  
        x += sign(xsp); //keep moving
    }   
    xsp = 0; //once not 1 pixel, stop
    
}


//Vertical Collision 
if (place_meeting(x, y+ysp, obj_collide)) //if range between solid and player is less than speed 
{
    while(!(place_meeting(x, y+sign(ysp), obj_collide))) { //until 1 pixel away 
        y += sign(ysp); //keep moving up
    }   
    ysp = 0; //once not 1 pixel, stop
}

x += xsp;
y += ysp; 

//face check for animations
if (xsp &gt; 0) {
    face = 1; //right
} else if (xsp &lt; 0) {
    face = 0; //left
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animations

if (face = 1) {
    image_xscale = 1;
}
if (face = 0) {
    image_xscale = -1;
}

if (attack = true) {
    sprite_index = spr_playerattack1;
    image_speed = 0.45;
}

if (xsp != 0)
    {
    sprite_index = spr_playermove;
    //image_xscale = 1;
    image_speed = 0.45;
    }

if (xsp = 0)
    {
    sprite_index = spr_player;
    image_speed = 0.1;
    }
    
if (jumps = 1) //one jump
    {
    sprite_index = spr_playerjump;
    } 
    
if (jumps = 0) //double jump 
    {
    sprite_index = spr_playerslam;
    image_speed = 1;
    }
    
if (ysp &gt;= 0 &amp;&amp; (!place_meeting(x, y+1, obj_collide)))
    {
    sprite_index = spr_playerfall;
    }
    
if (!place_meeting(x, y+1, obj_collide)&amp;&amp; (ysp &gt;= 7)) {
    if (place_meeting(x+1, y, obj_collide) &amp;&amp; (key_r))
        {
  
            sprite_index = spr_playerslide;
        
        }
    
    if (place_meeting(x-1, y, obj_collide) &amp;&amp; (key_l))
        {
      
            sprite_index = spr_playerslide;
            image_xscale = -1;

        }
    }
    

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage

if place_meeting(x-2,y,obj_enemy1)
    {
    instance_destroy();
    action_create_object_motion(obj_playerdmg,x,y,8,0);
    }
if place_meeting(x+2,y,obj_enemy1)
    {
    instance_destroy();
    action_create_object_motion(obj_playerdmg,x,y,-8,0);
    }
if place_meeting(x-2,y,obj_enemy2)
    {
    instance_destroy();
    action_create_object_motion(obj_playerdmg,x,y,8,0);
    }
if place_meeting(x+2,y,obj_enemy2)
    {
    instance_destroy();
    action_create_object_motion(obj_playerdmg,x,y,-8,0);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (face = 1 &amp;&amp; jumps = 2 &amp;&amp; ysp = 0)
    {
    instance_destroy();
     action_create_object_motion(obj_playerattack,x,y,5,0);    
    }

if (face = 0 &amp;&amp; jumps = 2 &amp;&amp; ysp = 0)
    {
    instance_destroy();
     action_create_object_motion(obj_playerattack,x,y,-5,0);     
    }

if (ysp &gt; 0 || ysp &lt; 0 || jumps &lt; 2)
    {
    instance_destroy();
     action_create_object_motion(obj_playerslam,x,y,-5,90);
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
