<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
grav = 0.5;
xsp = 0;
ysp = 0;
jsp = 7; //jump speed
msp = 5; //move speed
fric = 0.5 //friction

jumps = 0; 
jumps_max = 2; 

attack = false; 

image_speed = 0.25;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Player input
var key_r = keyboard_check(vk_right); //1 or 0 
var key_l = keyboard_check(vk_left); //1 or 0, since left is negative x direction
var key_j = keyboard_check_pressed(vk_space); // 1 or 0
var key_a = keyboard_check_pressed(ord('x'));

//Movement
move_sign = (-key_l + key_r);
move = move_sign * msp;   
if (xsp != move) {
 if (xsp &lt; move ){
    xsp += fric;  
 }else if (xsp &gt; move) {
    xsp -= fric; 
 }
 }else if (move = 0)
{
    if(xsp !=0)
    {
        if(xsp &lt;0)
        {
            xsp += fric;
        }
            else
            {
                xsp -= fric;
            }
    }
}

//Gravity
if (ysp &lt; 10) {
    ysp += grav;
    if (ysp &gt; 1)
        ysp *= 1.05;
}; 

//Jump
if (place_meeting(x, y+1, obj_solid)) //player is meeting the floor
{
    jumps = jumps_max;
}

if (key_j &amp;&amp; jumps&gt;0) {
 if ((place_meeting(x+1, y, obj_solid) &amp;&amp; key_r) || (place_meeting(x-1, y, obj_solid) &amp;&amp; key_l)) { //walljump
    ysp = -jsp;
    jumps -= 1;
    xsp += -move_sign * 5;
    } else {
    ysp = -jsp; //jump 
    jumps -=1;
    }
}


//Horizontal Collision 
if (place_meeting(x+xsp, y, obj_solid)) //if range between wall and player is less than speed 
{
    while(!(place_meeting(x+sign(xsp), y, obj_solid))) { //while not 1 pixel away from wall  
        x += sign(xsp); //keep moving
    }   
    xsp = 0; //once not 1 pixel, stop
}


//Vertical Collision 
if (place_meeting(x, y+ysp, obj_solid)) //if range between solid and player is less than speed 
{
    while(!(place_meeting(x, y+sign(ysp), obj_solid))) { //until 1 pixel away 
        y += sign(ysp); //keep moving up
    }   
    ysp = 0; //once not 1 pixel, stop
}

x += xsp;
y += ysp; 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera
view_xview[0] += ((x-(view_wview[0]/2)) - view_xview[0]) * 0.13;
view_yview[0] += ((y-(view_wview[0]/3.4)) - view_yview[0]) * 0.13;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animations

if (xsp &gt; 0)
    {
    sprite_index = spr_playermove;
    image_xscale = 1;
    image_speed = 0.45;
    }
 
    
if (xsp &lt; 0)
    {
    sprite_index = spr_playermove;
    image_xscale = -1;
    image_speed = 0.45;
    }

if (xsp = 0)
    {
    sprite_index = spr_player;
    image_speed = 0.1;
    }
    
if (ysp &lt; 0)
    {
    sprite_index = spr_playerjump;
    }
    
if (ysp &gt;= 0 &amp;&amp; (!place_meeting(x, y+1, obj_solid)))
    {
    sprite_index = spr_playerfall;
    }
    
if (!place_meeting(x, y+1, obj_solid)&amp;&amp; (ysp &gt;= 7)) {
    if (place_meeting(x+1, y, obj_solid) &amp;&amp; (key_r))
        {
  
            sprite_index = spr_playerslide;
        
        }
    
    else if (place_meeting(x-1, y, obj_solid) &amp;&amp; (-key_l))
        {
      
            sprite_index = spr_playerslide;
            image_xscale = -1;

        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
